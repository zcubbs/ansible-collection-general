---
- name: Ensure HAProxy is installed.
  package: name=haproxy state=present

- name: Ensure HAProxy is enabled (so init script will start it on Debian).
  lineinfile:
    dest: /etc/default/haproxy
    regexp: "^ENABLED.+$"
    line: "ENABLED=1"
    state: present
  when: ansible_os_family == 'Debian'

- name: Get HAProxy version.
  command: haproxy -v
  register: haproxy_version_result
  changed_when: false
  check_mode: false

- name: Set HAProxy version.
  set_fact:
    haproxy_version: "{{ '1.5' if '1.5.' in haproxy_version_result.stdout else '1.4' }}"

- name: Ensure directory exists for local self-signed TLS certs.
  file:
    path: /etc/letsencrypt/live/{{ server_hostname }}
    state: directory
  when: haproxy_cert_strategy == 'self-signed'

- name: Generate an OpenSSL private key.
  community.crypto.openssl_privatekey:
    path: /etc/letsencrypt/live/{{ server_hostname }}/privkey.pem
  when: haproxy_cert_strategy == 'self-signed'

- name: Generate an OpenSSL CSR.
  community.crypto.openssl_csr:
    path: /etc/ssl/private/{{ server_hostname }}.csr
    privatekey_path: /etc/letsencrypt/live/{{ server_hostname }}/privkey.pem
    common_name: "{{ server_hostname }}"
  when: haproxy_cert_strategy == 'self-signed'

- name: Generate a Self Signed OpenSSL certificate.
  community.crypto.x509_certificate:
    path: /etc/letsencrypt/live/{{ server_hostname }}/fullchain.pem
    privatekey_path: /etc/letsencrypt/live/{{ server_hostname }}/privkey.pem
    csr_path: /etc/ssl/private/{{ server_hostname }}.csr
    provider: selfsigned
  when: haproxy_cert_strategy == 'self-signed'

- name: "Create remote directory if it does not exist /etc/haproxy/certs"
  file:
    path: "/etc/haproxy/certs"
    state: directory

- name: Prepare TLS cert file
  command: "sudo -E bash -c 'cat /etc/letsencrypt/live/{{ server_hostname }}/fullchain.pem /etc/letsencrypt/live/{{ server_hostname }}/privkey.pem > /etc/haproxy/certs/cert.pem'"
  when: haproxy_cert_strategy == 'self-signed'

- name: Prepare TLS cert file
  command: "sudo -E bash -c 'cat {{ haproxy_tls_certs_path }}/fullchain.pem {{ haproxy_tls_certs_path }}/privkey.pem > /etc/haproxy/certs/cert.pem'"
  when: haproxy_cert_strategy == 'letsencrypt'

- name: Copy HAProxy configuration in place.
  template:
    src: haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
    mode: 0644
    validate: haproxy -f %s -c -q
  notify: restart haproxy

- name: Ensure HAProxy is started and enabled on boot.
  service: name=haproxy state=started enabled=yes
